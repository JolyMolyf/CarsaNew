components:
  schemas:
    Client:
      properties:
        person_id:
          type: string
          description: The client id.
          example: 3f2f3089-c465-40b6-8861-cb32df4d6e64
        first_name:
          type: string
          description: The client name.
          example: John
        last_name:
          type: string
          description: The client surname.
          example: Wick
        email:
          type: string
          description: The client email.
          example: example@gmail.com
        phone:
          type: string
          description: The client phone number.
          example: +485755021456
        Location:
          type: object
          properties:
            id:
              type: string
              example: 69f07a31-18eb-4a9c-b70d-dfbeab5b76e4
            country:
              type: string
              example: USA
            state:
              type: string
              example: Kalifornia
            city:
              type: string
              example: Sacramento
            postal_code:
              type: string
              nullable: true
              example: 04042
            street:
              type: string
              nullable: true
              example: 91 Woodrow Ln
            house_number:
              type: string
              nullable: true
              example: 74A
            apartment_number:
              type: string
              nullable: true
              example: 502
      required:
        - person_id
        - first_name
        - last_name
        - email
        - phone

paths:
  /api/clients/{id}:
    get:
      summary: Retrieve a list of all clients stored in database.
      description: Returns client object with given id if one exists and id format is correct
      tags:
        - Clients
      responses:
        200:
          description: A JSON object of client
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Client'
        400:
          description: Provided id is not a correct uuidv4 format
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Id paarameter didn't passed validation
                    example: Parameter should be a valid UUID v4
        404:
          description: Client with provided id doesn't exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: There is no client with provided id